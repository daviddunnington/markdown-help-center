import type { Metadata } from "next";
import { Geist, Geist_Mono } from "next/font/google";
import "./globals.css";
import { Footer } from "@/components/footer";
import { BreadcrumbProvider } from "@/lib/breadcrumb-context";
import { ClientHeroSearch } from "@/components/client-hero-search";
import { ThemeProvider } from "@/components/theme-provider";
import { getAllArticles } from "@/lib/content";
import { ClerkProvider } from "@clerk/nextjs";
import { siteConfig } from "@/lib/config";
import { Toaster } from "sonner";

const geistSans = Geist({
  variable: "--font-geist-sans",
  subsets: ["latin"],
});

const geistMono = Geist_Mono({
  variable: "--font-geist-mono",
  subsets: ["latin"],
});

export const metadata: Metadata = {
  title: "Create Next App",
  description: "Generated by create next app",
};

export default async function RootLayout({
  children,
}: Readonly<{
  children: React.ReactNode;
}>) {
  const allArticles = await getAllArticles();

  const content = (
    <html lang="en" suppressHydrationWarning>
      <body
        className={`${geistSans.variable} ${geistMono.variable} antialiased`}
      >
        <ThemeProvider
          attribute="class"
          defaultTheme="system"
          enableSystem
          disableTransitionOnChange
        >
          <BreadcrumbProvider>
            <div className="min-h-screen bg-background">
              <ClientHeroSearch articles={allArticles} />
              {children}
            </div>
          </BreadcrumbProvider>
          <Footer />
          <Toaster />
        </ThemeProvider>
      </body>
    </html>
  );

  if (siteConfig.auth.enabled && siteConfig.auth.clerk.publishableKey) {
    return (
      <ClerkProvider publishableKey={siteConfig.auth.clerk.publishableKey}>
        {content}
      </ClerkProvider>
    );
  }

  return content;
}
